var x;
procedure a;
	var y;
	begin
		y := 4;
		x := (x+3)*2/2;
	end;
begin
	x := 2;
	if odd x then 
		x := x * 3
	else if x < 2 then
		x := x * 4
	else
		call a;

end.


-----------------------------------------------------------


Lexeme Table:
Lexeme			Token Type
var			29
x			2
;			18
procedure			30
a			2
;			18
var			29
y			2
;			18
begin			21
y			2
:=			20
4			3
;			18
x			2
:=			20
(			15
x			2
+			4
3			3
)			16
*			6
2			3
/			7
2			3
;			18
end			22
;			18
begin			21
x			2
:=			20
2			3
;			18
if			23
odd			8
x			2
then			24
x			2
:=			20
x			2
*			6
3			3
else			33
if			23
x			2
<			11
2			3
then			24
x			2
:=			20
x			2
*			6
4			3
else			33
call			27
a			2
;			18
end			22
.			19

Lexeme List:
 29 | 2 x | 18 | 30 | 2 a | 18 | 29 | 2 y | 18 | 21 | 2 y | 20 | 3 4 | 18 | 2 x | 20 | 15 | 2 x | 4 | 3 3 | 16 | 6 | 3 2 | 7 | 3 2 | 18 | 22 | 18 | 21 | 2 x | 20 | 3 2 | 18 | 23 | 8 | 2 x | 24 | 2 x | 20 | 2 x | 6 | 3 3 | 33 | 23 | 2 x | 11 | 3 2 | 24 | 2 x | 20 | 2 x | 6 | 3 4 | 33 | 27 | 2 a | 18 | 22 | 19


The Program is Syntactically Correct



Assembly Code Generated:
 0: OP: 6 R:0 L:0 M:3
 1: OP: 6 R:0 L:0 M:1
 2: OP: 7 R:0 L:0 M:16
 3: OP: 6 R:0 L:0 M:4
 4: OP: 6 R:0 L:0 M:1
 5: OP: 1 R:0 L:0 M:4
 6: OP: 4 R:0 L:0 M:4
 7: OP: 3 R:0 L:1 M:4
 8: OP: 1 R:1 L:0 M:3
 9: OP: 13 R:0 L:0 M:1
 10: OP: 1 R:1 L:0 M:2
 11: OP: 15 R:0 L:0 M:1
 12: OP: 1 R:1 L:0 M:2
 13: OP: 16 R:0 L:0 M:1
 14: OP: 4 R:0 L:1 M:4
 15: OP: 2 R:0 L:0 M:0
 16: OP: 1 R:0 L:0 M:2
 17: OP: 4 R:0 L:0 M:4
 18: OP: 3 R:0 L:0 M:4
 19: OP: 17 R:0 L:0 M:0
 20: OP: 8 R:0 L:0 M:26
 21: OP: 3 R:0 L:0 M:4
 22: OP: 1 R:1 L:0 M:3
 23: OP: 15 R:0 L:0 M:1
 24: OP: 4 R:0 L:0 M:4
 25: OP: 7 R:0 L:0 M:36
 26: OP: 3 R:0 L:0 M:4
 27: OP: 1 R:1 L:0 M:2
 28: OP: 21 R:0 L:0 M:1
 29: OP: 8 R:0 L:0 M:35
 30: OP: 3 R:0 L:0 M:4
 31: OP: 1 R:1 L:0 M:4
 32: OP: 15 R:0 L:0 M:1
 33: OP: 4 R:0 L:0 M:4
 34: OP: 7 R:0 L:0 M:36
 35: OP: 5 R:0 L:0 M:3
 36: OP: 11 R:0 L:0 M:0


Initial Values				pc	bp	sp
0	INC	0	0	3	1	0	3
CPU:	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0
1	INC	0	0	1	2	0	4
CPU:	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 0
2	JMP	0	0	16	16	0	4
CPU:	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 0
16	LIT	0	0	2	17	0	4
CPU:	2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 0
17	STO	0	0	4	18	0	4
CPU:	2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
18	LOD	0	0	4	19	0	4
CPU:	2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
19	ODD	0	0	0	20	0	4
CPU:	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
20	JPC	0	0	26	26	0	4
CPU:	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
26	LOD	0	0	4	27	0	4
CPU:	2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
27	LIT	1	0	2	28	0	4
CPU:	2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
28	LSS	0	0	1	29	0	4
CPU:	0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
29	JPC	0	0	35	35	0	4
CPU:	0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
35	CAL	0	0	3	3	5	4
CPU:	0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2
3	INC	0	0	4	4	5	8
CPU:	0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36
4	INC	0	0	1	5	5	9
CPU:	0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 0
5	LIT	0	0	4	6	5	9
CPU:	4 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 0
6	STO	0	0	4	7	5	9
CPU:	4 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
7	LOD	0	1	4	8	5	9
CPU:	2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
8	LIT	1	0	3	9	5	9
CPU:	2 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
9	ADD	0	0	1	10	5	9
CPU:	5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
10	LIT	1	0	2	11	5	9
CPU:	5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
11	MUL	0	0	1	12	5	9
CPU:	10 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
12	LIT	1	0	2	13	5	9
CPU:	10 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
13	Div	0	0	1	14	5	9
CPU:	5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 2 | 0 0 0 36 4
14	STO	0	1	4	15	5	9
CPU:	5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 5 | 0 0 0 36 4
15	RTN	0	0	0	36	0	4
CPU:	5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 5
36	SIO	0	0	0	37	0	4
CPU:	5 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Stack:	0 0 0 0 5